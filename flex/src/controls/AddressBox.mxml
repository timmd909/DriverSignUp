<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		implements="components.IValidate"
		width="100%" height="{ HEIGHT }" focusEnabled="true" xmlns:controls="controls.*" >
	<fx:Script>
		<![CDATA[
			import spark.events.IndexChangeEvent;
			public static const HEIGHT:int = 90;
			
			[Bindable]
			public var addressNum:int = -1; 
			
			public static const BLANK_ADDRESS:XML = <RowAddresses ADRTYP="HOME" ADDR1="Addy line 1" ADDR2="Addy line 2" CITY="Aliquippa" ST="PA" ZIP="15001" />;			
			
			
			// -=- VALIDATION -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- //
			private var validAddressLine1:Boolean = false;
			private var validCity:Boolean = false;
			private var validZIP:Boolean = false;
			
			public function validate( ):Boolean {
				var rval:Boolean = true;
				
				if( !validAddressLine1 ) {
					rval = false;
					zipCode.errorString = "Required";
					zipCode.setFocus();
				} else {
					zipCode.errorString = '';
				}
				
				if( stateName.selectedItem == null ) {
					rval = false;
					stateName.errorString = 'Required';
				} else {
					stateName.errorString = '';
				}
				
				if( !validCity ) {
					rval = false;
					cityName.errorString = "Required";
					cityName.setFocus();
				} else {
					cityName.errorString = '';
				}
				
				if( !validAddressLine1 ) {
					rval = false;
					addressLine1.errorString = "Required";
					addressLine1.setFocus();
				} else {
					addressLine1.errorString = '';
				}
				
				return rval;
			}
			// -=- / VALIDATION -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- //
			
			
			public function toAddressRowXML( ):XML {
				var newAddressRowXML:XML = new XML( BLANK_ADDRESS );
				newAddressRowXML.@ADDR1 = addressLine1.text;
				newAddressRowXML.@ADDR2 = addressLine2.text;
				newAddressRowXML.@CITY  = cityName.text;
				
				if( stateName.selectedItem as XML ) {
					newAddressRowXML.@ST = (stateName.selectedItem as XML).abbreviation;
				} else {
					delete newAddressRowXML.@ST;
				}
				
				newAddressRowXML.@ZIP = zipCode.text;
				
				return newAddressRowXML;
			} // public function toAccidentRowXML( ):XML {
			

		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:StringValidator source="{ addressLine1 }" property="text" valid="validAddressLine1=true" invalid="validAddressLine1=false" />
		<mx:StringValidator source="{ cityName }" property="text" valid="validCity=true" invalid="validCity=false" />
		<mx:StringValidator source="{ zipCode }" property="text" valid="validZIP=true" invalid="validZIP=false" />
	</fx:Declarations>
	<mx:Form width="100%" height="100%" labelWidth="100">
		<mx:FormItem label="Address #{ addressNum }" width="100%">
			<s:TextInput id="addressLine1" width="100%" />
		</mx:FormItem>
		<mx:FormItem label="" width="100%">
			<s:TextInput id="addressLine2" width="100%" />
		</mx:FormItem>
		<mx:FormItem label="City" width="100%" labelStyleName="formItemLabelRightAlign" direction="horizontal">
			<s:TextInput width="175" id="cityName" />
			
			<s:Label styleName="formItemLabelRightAlign" text="State" width="100" height="100%" />
			<!--<s:DropDownList width="175" id="stateName" height="23" />-->
			<controls:StateDropDownList width="175" id="stateName" height="23" />
			
			<s:Label styleName="formItemLabelRightAlign" text="ZIP" width="100" height="100%" />
			<s:TextInput width="60"  id="zipCode" maxChars="5" restrict="0-9" />
			
			<s:Label styleName="formItemLabelRightAlign" text="â€“" height="100%" />
			<s:TextInput width="40"  id="zipCodeExt" restrict="0-9" />
			
		</mx:FormItem>
	</mx:Form>
		
</mx:Box>
