<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:controls="controls.*"
		implements="components.IValidate"
		styleName="section" width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import controls.LicenseBox;
			
			private static const MAX_LICENSES:int = 5;
			
			// -=- VALIDATION -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- //
			public function validate( ):Boolean {
				for( var i:int = 0; i < numLicenses.value; i++ ) {
					var currBox:LicenseBox = licenseBox.getChildAt(i) as LicenseBox;
					if( !currBox.validate( ) ) return false;
				}
				return true;
			}
			// -=- / VALIDATION -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- //

			
			/** Fills in the specified row entry
			 */ 
			public function populateXML( rowXML:XML ):void {
				var numLicenses:int = licenseBox.numChildren;
				for( var i:int = 0; i < numLicenses; i++ ) {
					var currBox:LicenseBox = licenseBox.getChildAt(i) as LicenseBox;
					if( currBox ) rowXML.CDLs.appendChild( currBox.toLicenseRowXML() ); 
				}
			}
			
			private function onNumLicensesChange( ):void {
				var count:int;
				var i:int;
				
				if( licenseBox.numChildren == numLicenses.value ) {
					// already proper, do nothing
					trace( 'no change in # of licenses' );
					return;
				} else if( licenseBox.numChildren < numLicenses.value ) { // new value is more 
					count = numLicenses.value - licenseBox.numChildren;
					for( i = 0; i < count; i ++ ) {
						var temp:LicenseBox = new LicenseBox( );
						
						temp.licenseNum = licenseBox.numChildren + 1;
						
						licenseBox.addChild( temp );
						licenseBox.validateNow();
					}	
				} else { // new value is less
					count = licenseBox.numChildren - numLicenses.value;
					for( i = 0; i < count; i ++ ) {
						trace( 'Deleting item #' + i.toString( ) );
						licenseBox.removeChildAt( licenseBox.numChildren - 1 );
						licenseBox.validateNow();
					}
					
				}
				
				return;
			} // private function onNumLicensesChange( ):void {
			
			
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!-- SECTION HEADER -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -->
	<s:Label styleName="sectionHeader" text="Step 3 â€” License Information" width="100%" />
	<!-- / SECTION HEADER -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -->
	
	<!-- SECTION CONTENTS -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -->
	<mx:VBox styleName="sectionContents" width="100%" height="100%" horizontalScrollPolicy="off">
		<mx:Form width="100%">
			<mx:FormItem label="How many driver licenses have you held in the past 3 years?" width="100%" >
				<s:NumericStepper minimum="0" maximum="{ MAX_LICENSES }" id="numLicenses" valueCommit="onNumLicensesChange( )" />
			</mx:FormItem>
		</mx:Form>
		
		<mx:Spacer height="5" />
		
		<mx:Box width="100%" id="licenseBox">
		</mx:Box>
		
	</mx:VBox>
	<!-- / SECTION CONTENTS -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -->
</mx:Box>
