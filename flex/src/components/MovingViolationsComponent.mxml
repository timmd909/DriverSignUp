<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:controls="controls.*"
		 implements="components.IValidate"
		 styleName="section" width="100%" height="100%" initialize="onInitialize( )">
	<fx:Script>
		<![CDATA[
			import controls.MovingViolationBox;
			
			public static const MAX_MOVING_VIOLATIONS:int = 5;
			
			private var movingViolationsArray:Array;
			
			
			// -=- VALIDATION -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- //
			public function validate( ):Boolean {
				for( var i:int = 0; i < numMovingViolations.value; i++ ) {
					var currBox:MovingViolationBox = movingViolationsBox.getChildAt(i) as MovingViolationBox;
					if( !currBox.validate( ) ) return false;
				}
				return true;
			}
			// -=- / VALIDATION -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- //

			private function onInitialize( ):void {
				var i:int;
				movingViolationsArray = new Array( );
				
				for( i = 0; i < MAX_MOVING_VIOLATIONS; i ++ ) {
					var tempMovingViolation:MovingViolationBox = new MovingViolationBox( );
					tempMovingViolation.movingViolationNum = i+1;
					movingViolationsArray.push( tempMovingViolation );
				}
				
				return;
			} // private function onInitialize( ):void 
		
		
			/** Fills in the specified row entry
			 */ 
			public function populateXML( rowXML:XML ):void {
				var numMovingViolations:int = movingViolationsBox.numChildren;
				for( var i:int = 0; i < numMovingViolations; i++ ) {
					var currBox:MovingViolationBox = movingViolationsBox.getChildAt(i) as MovingViolationBox;
					if( currBox ) rowXML.MovingViolations.appendChild( currBox.toMovingViolationsRowXML() ); 
				}
			}
			

			/** 
			 */
			private function onNumMovingViolationsChange( ):void {
				var i:int;
				
				if( movingViolationsBox.numChildren == numMovingViolations.value ) {
					
				} else if( movingViolationsBox.numChildren < numMovingViolations.value ) { // new value is more
					for( i = movingViolationsBox.numChildren; i < numMovingViolations.value; i ++ ) {
						movingViolationsBox.addChild( movingViolationsArray[i] );
					}
				} else { // new value is less
					for( i = movingViolationsBox.numChildren-1; movingViolationsBox.numChildren > numMovingViolations.value; i -- ) { 
						movingViolationsBox.removeChildAt( i );
					}
				}				
				
				return;
			} // private function onNumMovingViolationsChange( ):void 
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!-- SECTION HEADER -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -->
	<s:Label styleName="sectionHeader" text="Step 6 â€” Moving Violations" width="100%" />
	<!-- / SECTION HEADER -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -->
	
	<!-- SECTION CONTENTS -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -->
	<mx:VBox styleName="sectionContents" width="100%" height="100%" horizontalScrollPolicy="off">
		<mx:Form width="100%">
			<mx:FormItem width="100%" label="How many moving violations have you had in the past 3 years?">
				<s:NumericStepper id="numMovingViolations" minimum="0" maximum="{ MAX_MOVING_VIOLATIONS }" valueCommit="onNumMovingViolationsChange( )"/>
			</mx:FormItem>
		</mx:Form>
		<mx:Box id="movingViolationsBox" width="100%">
		</mx:Box>
	</mx:VBox>
	<!-- / SECTION CONTENTS -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -=- -->
</mx:Box>
